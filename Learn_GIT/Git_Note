----------------------GIT-------------------------
*** Một số lệnh cơ bản

- git init 								// Tạo một cái respository trên máy bạn
- git clone /path/to/respository		// Lấy từ trên mạng về
- git pull								// Đồng bộ từ trên mạng về máy
- git pull origin <branch need take>	// Lấy code từ branch này về
- git add <file name>					// Add một file trên respository trên máy
- git add .								// Add tất cả các file vào respository trên máy local
- git commit -m "commit message"        // Commit vào respository trên máy local
- git log								// Xem thông tin các file
- git status							// Xem thông tin các file
- git remote add origin https://github.com/quoctrinhtrong/quoctrinhtrong.github.io // Gắn origin
- git remote set-url origin ssh://git@gitlab.haravan.com:2222/oss/entrypoint.git // set remote
- git push origin master				// Đẩy các file, đồng bộ respository máy local và respository máy server lên origin
- git push -u origin master				// Đẩy các file lên master khi mới tạo respository

git remote set-url origin ssh_url

NOTE: Khi gặp conflict thì "git pull" về và chọn mội dung => git add . => git commit -m "resolve conflict" => git push
---

*** Một số lệnh nâng cao

- git branch -b <branch>				// Create branch
- git checkout -b <branch>				// Tạo branch và check out vào branch
- git branch <branch> 					// Chỉ tạo branch và không check out
- git branch -m <new branch name>		// Đổi tên branch
- git branch 							// Xem tất cả các branch
- git branch -a							// Xem đang làm việc ở branch nào
- git push --set-upstream origin <branch name> 	// Đẩy branch lên remote respository
- git branch -d <branch> 				// Delete branch
- git checkout <branch> 				// Chuyển đến branch theo tên của branch, có thể chuyển đến master ( git checkout master )
- git push origin <branch> 				// Đẩy source lên branch nào đó
- git merge < branch > 					// merge branch vào master hoặc branch hiện tại
- git rebase <branch>					// merge một branch nhưng tự động sắp xếp lại commit. Nếu sử dụng rebase -i có thể sắp xếp được. Khi thoát dùng :wq (write and quit)
- git cherry-pick

----

Set global account
  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"
  
*** Merge và push code lên master
- git checkout master
- git pull
- git merge <branch need merge>
- git push origin master

*** Git flow khi có task mới
- git checkout <develop_branch>
- git pull origin <develop_branch> // Lấy code mới nhất từ develop về
- git checkout -b <new_branch_for_new_task> // Tạo branch mới từ develop
- thực hiện task
- git add .
- git commit -m "new change"
- git push origin <new_branch_for_new_task>
- tạo merge request đến develop_branch
- theo dõi và fix review

** fetch và pull

- Git fetch chỉ tải về giữ liệu nhưng không merge, nó được đưa vào nhánh khác trên local
- git pull thì tải về và merge

** Tạo merge request trên gitlab
https://docs.gitlab.com/ee/user/project/merge_requests/creating_merge_requests.html

** In Module Task
- git checkout feature-tasks
- git add .
- git commit -m "add comment"
- git pull origin feature-tasks
- git push origin feature-tasks
- new merge request feature-tasks -> origin/staging 
- merge
- done task và assign to Ngô Lâm Khánh QC

Refer: 
- https://codelearn.io/sharing/cau-lenh-va-quy-trinh-lam-viec-voi-git
- https://viblo.asia/p/tim-hieu-ve-mot-so-khai-niem-trong-git-RQqKLgVN57z
- https://www.tma.vn/Hoi-dap/Cam-nang-nghe-nghiep/Combo-cac-lenh-git-du-dung-trong-mot-du-an-cua-cong-ty-cho-nguoi-moi-bat-dau/23335
- https://vinasupport.com/quy-trinh-git-flow-chuan-cho-du-an-phan-mem/


